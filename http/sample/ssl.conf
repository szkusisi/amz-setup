#
# When we also provide SSL we have to listen to the 
# the HTTPS port in addition.
#
Listen 443 https

##
##  SSL Global Context
##
##  All SSL configuration in this context applies both to
##  the main server and all SSL-enabled virtual hosts.
##

#   Pass Phrase Dialog:
#   Configure the pass phrase gathering process.
#   The filtering dialog program (`builtin' is a internal
#   terminal dialog) has to provide the pass phrase on stdout.
SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog

#   Inter-Process Session Cache:
#   Configure the SSL Session Cache: First the mechanism 
#   to use and second the expiring timeout (in seconds).
SSLSessionCache         shmcb:/run/httpd/sslcache(512000)
SSLSessionCacheTimeout  300

#   Pseudo Random Number Generator (PRNG):
#   Configure one or more sources to seed the PRNG of the 
#   SSL library. The seed data should be of good random quality.
#   WARNING! On some platforms /dev/random blocks if not enough entropy
#   is available. This means you then cannot use the /dev/random device
#   because it would lead to very long connection times (as long as
#   it requires to make more entropy available). But usually those
#   platforms additionally provide a /dev/urandom device which doesn't
#   block. So, if available, use this one instead. Read the mod_ssl User
#   Manual for more details.
SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin
#SSLRandomSeed startup file:/dev/random  512
#SSLRandomSeed connect file:/dev/random  512
#SSLRandomSeed connect file:/dev/urandom 512

#
# Use "SSLCryptoDevice" to enable any supported hardware
# accelerators. Use "openssl engine -v" to list supported
# engine names.  NOTE: If you enable an accelerator and the
# server does not start, consult the error logs and ensure
# your accelerator is functioning properly. 
#
SSLCryptoDevice builtin
#SSLCryptoDevice ubsec

##
## SSL Virtual Host Context

<Virtualhost *:443>
ServerName www.aiocr.de
DocumentRoot /var/www/html/www.aiocr.de

ErrorLog "logs/www.aiocr.de_error.log"
TransferLog "logs/www.aiocr.de_access.log"
LogLevel warn

CustomLog logs/www.aiocr.de_ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

SSLEngine On
SSLProtocol all -SSLv2

SSLCertificateFile /etc/pki/tls/private/www.aiocr.de.crt
SSLCertificateKeyFile /etc/pki/tls/private/www.aiocr.de.key
SSLCACertificateFile /etc/pki/tls/private/ca.crt
SSLCARevocationFile /etc/pki/tls/private/crl.pem
SSLCARevocationCheck chain

#RewriteEngine on
#RewriteRule ^/$ /ap/ [R=302,L]

SSLVerifyClient optional
SSLVerifyDepth 1

Header set SSL_CLIENT_VERIFY "%{SSL_CLIENT_VERIFY}s"
Header set SSL_CLIENT_CERT   "%{SSL_CLIENT_CERT}s"


#<Location "/">
#<If "%{SSL_CLIENT_VERIFY} != 'SUCCESS'">
##    Redirect permanent "/" "http://10.0.0.16/"
#</If>
#</Location>



# 証明書なし
<If "%{SSL_CLIENT_VERIFY} != 'SUCCESS'">
    Redirect permanent "/" "https://google.com"
</If>

# 証明書期限切れ

# 証明書異なる発行者（OU評価）

# 証明書失効リスト記載者

# 他エラー



ErrorDocument 403 /error/403.html
ErrorDocument 404 /error/404.html
ErrorDocument 500 /error/500.html

# Require expr %{SSL_CLIENT_VERIFY} == "SUCCESS"


#ProxyRequests Off
#ProxyPass / http://127.0.0.1:8881/
#ProxyPassReverse / http://127.0.0.1:8881/

#RequestHeader set X-Client-Cert-Subject %{SSL_CLIENT_S_DN}s
#RequestHeader set X-Client-Cert-Serial  %{SSL_CLIENT_M_SERIAL}s
#RequestHeader set X-Client-Cert         %{SSL_CLIENT_CERT}s

<Location "/ap">
    ProxyPass http://127.0.0.1:8881/
    ProxyPassReverse http://127.0.0.1:8881/
    SSLVerifyClient require
    #SSLVerifyClient optional
    SSLVerifyDepth 1
    Require expr %{SSL_CLIENT_VERIFY} == "SUCCESS"

    #SSLOptions +StrictRequire
        RequestHeader set SSL_CLIENT_S_DN "%{SSL_CLIENT_S_DN}s"
        RequestHeader set SSL_CLIENT_S_DN_C "%{SSL_CLIENT_S_DN_C}s"
        RequestHeader set SSL_CLIENT_S_DN_ST "%{SSL_CLIENT_S_DN_ST}s"
        RequestHeader set SSL_CLIENT_S_DN_L "%{SSL_CLIENT_S_DN_L}s"
        RequestHeader set SSL_CLIENT_S_DN_CN "%{SSL_CLIENT_S_DN_CN}s"
        RequestHeader set SSL_CLIENT_S_DN_O "%{SSL_CLIENT_S_DN_O}s"
        RequestHeader set SSL_CLIENT_S_DN_OU "%{SSL_CLIENT_S_DN_OU}s"
        RequestHeader set SSL_CLIENT_S_DN_Email "%{SSL_CLIENT_S_DN_Email}s"

        RequestHeader set SSL_CLIENT_I_DN "%{SSL_CLIENT_I_DN}s"
        RequestHeader set SSL_CLIENT_I_DN_C "%{SSL_CLIENT_I_DN_C}s"
        RequestHeader set SSL_CLIENT_I_DN_ST "%{SSL_CLIENT_I_DN_ST}s"
        RequestHeader set SSL_CLIENT_I_DN_L "%{SSL_CLIENT_I_DN_L}s"
        RequestHeader set SSL_CLIENT_I_DN_CN "%{SSL_CLIENT_I_DN_CN}s"
        RequestHeader set SSL_CLIENT_I_DN_O "%{SSL_CLIENT_I_DN_O}s"
        RequestHeader set SSL_CLIENT_I_DN_OU "%{SSL_CLIENT_I_DN_OU}s"
        RequestHeader set SSL_CLIENT_I_DN_Email "%{SSL_CLIENT_I_DN_Email}s"

        RequestHeader set SSL_CLIENT_V_START "%{SSL_CLIENT_V_START}s"
        RequestHeader set SSL_CLIENT_V_END "%{SSL_CLIENT_V_END}s"

        RequestHeader set SSL_SERVER_S_DN_OU "%{SSL_SERVER_S_DN_OU}s"
        RequestHeader set SSL_CLIENT_VERIFY "%{SSL_CLIENT_VERIFY}s"

        RequestHeader set X-Client-Cert-Subject %{SSL_CLIENT_S_DN}s
        RequestHeader set X-Client-Cert-Serial  %{SSL_CLIENT_M_SERIAL}s
        RequestHeader set X-Client-Cert         %{SSL_CLIENT_CERT}s
</Location>

</VirtualHost>



<Virtualhost *:443>
ServerName staff.aiocr.de
DocumentRoot /var/www/html/staff.aiocr.de

ErrorLog "logs/staff.aiocr.de_error.log"
TransferLog "logs/staff.aiocr.de_access.log"
LogLevel warn

CustomLog logs/staff.aiocr.de_ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

SSLEngine On
Header always set Strict-Transport-Security "max-age=31536000"

SSLProtocol all -SSLv2

SSLCertificateFile /etc/pki/tls/private/staff.aiocr.de.crt
SSLCertificateKeyFile /etc/pki/tls/private/staff.aiocr.de.key
SSLCACertificateFile /etc/pki/tls/private/ca.crt

ProxyRequests Off
ProxyPass / http://127.0.0.1:8882/
ProxyPassReverse / http://127.0.0.1:8882/
</VirtualHost>

